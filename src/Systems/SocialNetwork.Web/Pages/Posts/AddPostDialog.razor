@using SocialNetwork.Web.Pages.Posts.Services
@using SocialNetwork.Web.Pages.Posts.Models
@using Microsoft.AspNetCore.Components.Forms
@inject IPostService PostService
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <MudTextField @bind-Value="TextValue" Label="Type your post" Variant="Variant.Outlined"></MudTextField>
        <MudFileUpload T="IBrowserFile" Accept=".jpg" FilesChanged="UploadFiles">
            <ButtonTemplate>
                <MudButton HtmlTag="label"
                           Variant="Variant.Filled"
                           Color="Color.Primary"
                           StartIcon="@Icons.Material.Filled.CloudUpload"
                           for="@context">
                    Upload Files
                </MudButton>
            </ButtonTemplate>
        </MudFileUpload>
        @if (files != null)
        {
            <MudText Typo="@Typo.h6">@files.Count() File@(files.Count() == 1 ? "" : "s"):</MudText>
            <MudList>
                @foreach (var file in files)
                {
                    <MudListItem Icon="@Icons.Material.Filled.AttachFile" @key="@file">
                        @file.Name <code>@file.Size bytes</code>
                    </MudListItem>
                }
            </MudList>
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Info" Variant="Variant.Filled" OnClick="async () => await Submit()">Send post.</MudButton>
    </DialogActions>
</MudDialog>


@code {

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    public string TextValue { get; set; }
    List<IBrowserFile> files = new List<IBrowserFile>();

    async Task Submit()
    {
        try
        {
            var post = await PostService.AddPost(new PostAddModel() { Text = TextValue });
            if (files.Any())
            {
                await PostService.AddAttachments(post.Id, files);
                post.Attachments = await PostService.GetPostAttachments(post.Id);
            }
            MudDialog.Close(DialogResult.Ok(post));
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message);
        }
    }

    void Cancel() => MudDialog.Cancel();

    private void UploadFiles(IBrowserFile file)
    {
        files.Add(file);
    }

}